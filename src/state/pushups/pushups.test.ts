import {rootReducer} from 'state';

test('Testing Pushup Reducer', () => {
  let state;
  state = rootReducer({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INCREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INCREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INCREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INTERVAL',payload:{interval:1000,increment:1}});
  expect(state).toEqual({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INCREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INCREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/INCREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/STOP_INTERVAL',payload:{}});
  expect(state).toEqual({pushups:{count:3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:-1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:-1},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:-2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:-2},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:-3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:-3},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:-4},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:-4},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/DECREMENT',payload:{count:1}});
  expect(state).toEqual({pushups:{count:-5},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:-5},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/SET_COUNT',payload:{count:4}});
  expect(state).toEqual({pushups:{count:4},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
  state = rootReducer({pushups:{count:4},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'PUSHUP/SET_COUNT',payload:{count:42}});
  expect(state).toEqual({pushups:{count:42},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
});
