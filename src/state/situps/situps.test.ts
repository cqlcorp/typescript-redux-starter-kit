import {rootReducer as reducers} from 'state';

test('Testing Situp Reducers', () => {
    let state;
    state = reducers({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/DECREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:-1},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:-1},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/DECREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:-2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:-2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/DECREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:-3},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:-3},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:-2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:-2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:-1},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:-1},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:0},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:1},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:1},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INTERVAL',payload:{interval:1000,increment:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:2},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:3},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:3},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:4},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:4},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/INCREMENT',payload:{count:1}});
    expect(state).toEqual({pushups:{count:0},situps:{count:5},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:5},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/STOP_INTERVAL',payload:{}});
    expect(state).toEqual({pushups:{count:0},situps:{count:5},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:5},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/SET_COUNT',payload:{count:4}});
    expect(state).toEqual({pushups:{count:0},situps:{count:4},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
    state = reducers({pushups:{count:0},situps:{count:4},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]}, {type:'SITUP/SET_COUNT',payload:{count:42}});
    expect(state).toEqual({pushups:{count:0},situps:{count:42},currentRoute:{currentRoute:'/counter-demo',params:{},hash:'',search:'',url:'/counter-demo'},requests:{defaultState:{busy:false},instances:{}},posts:[],users:[]});
});
